describe PrioriData::Integration::Apps do
  let(:instance) { described_class.new(app_ids) }
  let(:app_ids) { ["749133301", "517329357", "325683306", "458225159", "526831380", "327193945", "348618445", "291430598", "749078962", "316415412", "503757271", "395148744", "379869627", "601606659", "1020486527", "459707387", "288419283", "401533966", "426939660", "348779486", "958363882", "649246860", "336901296", "467953363", "695709241", "485251405", "505555988", "961390574", "417906074", "292148184", "479752016", "294631159", "410148139", "649202100", "460455088", "287526650", "482361332", "460412892", "382372588", "546298468", "739808997", "528922569", "497236102", "465367975", "495546638", "445801759", "628531466", "310078711", "415411639", "949017360", "305708971", "827141249", "547094769", "821205322", "886074803", "698744759", "495511938", "516492507", "471629622", "904822956", "482617382", "769602146", "945662966", "661007567", "916416931", "650561613", "978312542", "442814223", "594476963", "335189604", "556002847", "467953321", "490779008", "294937581", "572819275", "318572643", "513879979", "417401887", "373913405", "366765248", "362310884", "659288660", "464595524", "611597262", "647032797", "975746713", "497167406", "917857630", "961644736", "343198153", "608515289", "412396957", "419048258", "579300320", "584709151", "527887046", "547162979", "413208244", "931212644", "413511993", "992351930", "547642997", "361098444", "533671562", "430227107", "912250293", "839923054", "593296099", "419841529", "489771210", "465111766", "456314120", "608876851", "572579876", "1019327791", "557872119", "314819528", "545627378", "343527016", "429394638", "400259071", "422679615", "489821949", "338667601", "464199989", "572864697", "840157711", "310755546", "975770717", "558257741", "481404568", "802517287", "306867078", "533816298", "916760091", "817932940", "808357406", "592644945", "887768977", "1020454965", "314502416", "893902568", "306375551", "375928259", "572757152", "888227320", "951057136", "491537291", "715319015", "398101772", "488674899", "541592394", "552825440", "539498084", "986999294", "780216906", "871812944", "434371487", "611039652", "611593913", "397123729", "454643891", "663532889", "371674047", "688141190", "822251895", "952284499", "403692190", "416571494", "284145181", "460049357", "885142714", "903697721", "897511324", "512607963", "284625154", "486059426", "284908756", "314841443", "413928923", "306861907", "406279838", "509594468", "710433569", "547046983", "482498256", "574392006", "539587329", "447112326", "405215559", "547934690", "375584450", "968227562", "572724645", "920122607", "815134709", "844467240", "1020688532", "364193735", "480688850"] }

  before do
    app = OpenStruct.new(publisher_id: app_ids.first)

    allow(PrioriData::Repositories::App).to receive(:find).and_return(app)
  end

  describe '.import' do
    subject do
      VCR.use_cassette("apple_apps_success") do
        described_class.import(app_ids)
      end
    end

    after do
      subject
    end

    before do
      allow(described_class).to receive(:new).with(app_ids).and_return(instance)
    end

    it 'creates an instance' do
      expect(described_class).to receive(:new).with(app_ids).and_call_original
    end

    it 'calls import on instance' do
      expect(instance).to receive(:import)
    end
  end

  describe '#import' do
    context 'when app exists' do
      let(:publisher_ids) { {"749133301"=>749046894, "517329357"=>461812081, "325683306"=>294802544, "458225159"=>379847497, "526831380"=>405974803, "327193945"=>303585709, "348618445"=>300048140, "291430598"=>291430601, "749078962"=>749046894, "316415412"=>295646464, "503757271"=>503757274, "395148744"=>316500319, "379869627"=>379869630, "601606659"=>379847497, "1020486527"=>549019599, "459707387"=>392892358, "288419283"=>288419286, "401533966"=>401533969, "426939660"=>396082456, "348779486"=>309920282, "958363882"=>958363881, "649246860"=>396082456, "336901296"=>336829638, "467953363"=>289670447, "695709241"=>286751431, "485251405"=>462667655, "505555988"=>415411642, "961390574"=>556706923, "417906074"=>379847497, "292148184"=>292148187, "479752016"=>392892358, "294631159"=>294631162, "410148139"=>316500319, "649202100"=>461814989, "460455088"=>489185226, "287526650"=>287526653, "482361332"=>462667655, "460412892"=>365780017, "382372588"=>293764492, "546298468"=>401533969, "739808997"=>739809000, "528922569"=>477968464, "497236102"=>379847497, "465367975"=>465367978, "495546638"=>473001840, "445801759"=>379847497, "628531466"=>379847497, "310078711"=>303585709, "415411639"=>415411642, "949017360"=>949017359, "305708971"=>987048778, "827141249"=>415411642, "547094769"=>547094772, "821205322"=>687962555, "886074803"=>414194262, "698744759"=>401533969, "495511938"=>300048140, "516492507"=>462667655, "471629622"=>330935779, "904822956"=>448858697, "482617382"=>401533969, "769602146"=>432915499, "945662966"=>396082456, "661007567"=>501285606, "916416931"=>916415257, "650561613"=>650561616, "978312542"=>327447624, "442814223"=>442814226, "594476963"=>333195279, "335189604"=>335189607, "556002847"=>394819297, "467953321"=>289670447, "490779008"=>284829377, "294937581"=>294937584, "572819275"=>572819278, "318572643"=>303585709, "513879979"=>401533969, "417401887"=>417401890, "373913405"=>373913408, "366765248"=>295147488, "362310884"=>362310887, "659288660"=>659288663, "464595524"=>339488014, "611597262"=>501285606, "647032797"=>535763331, "975746713"=>317388804, "497167406"=>478672331, "917857630"=>517319458, "961644736"=>948577460, "343198153"=>299475042, "608515289"=>608515292, "412396957"=>388067551, "419048258"=>391343046, "579300320"=>579300323, "584709151"=>535763331, "527887046"=>412558553, "547162979"=>327447624, "413208244"=>369219614, "931212644"=>761415158, "413511993"=>323711285, "992351930"=>438175470, "547642997"=>547643000, "361098444"=>307726715, "533671562"=>423474216, "430227107"=>325330682, "912250293"=>507251391, "839923054"=>438175470, "593296099"=>558519890, "419841529"=>1028926625, "489771210"=>383841907, "465111766"=>366244980, "456314120"=>291128208, "608876851"=>501285606, "572579876"=>561175444, "1019327791"=>1019327790, "557872119"=>295660206, "314819528"=>299762240, "545627378"=>369876253, "343527016"=>342670582, "429394638"=>429394641, "400259071"=>397676103, "422679615"=>407770310, "489821949"=>429071152, "338667601"=>312164816, "464199989"=>464199992, "572864697"=>561175444, "840157711"=>840157714, "310755546"=>303585709, "975770717"=>549019599, "558257741"=>626120638, "481404568"=>481404671, "802517287"=>802517290, "306867078"=>303585709, "533816298"=>499812592, "916760091"=>419371999, "817932940"=>701591934, "808357406"=>725328440, "592644945"=>591634657, "887768977"=>814917963, "1020454965"=>1020454964, "314502416"=>314502419, "893902568"=>391953849, "306375551"=>306375554, "375928259"=>354566841, "572757152"=>561175444, "888227320"=>401533969, "951057136"=>462667655, "491537291"=>291091604, "715319015"=>635969903, "398101772"=>350788473, "488674899"=>302677215, "541592394"=>541589701, "552825440"=>525344454, "539498084"=>539353630, "986999294"=>379847497, "780216906"=>574198947, "871812944"=>303585709, "434371487"=>429516214, "611039652"=>501285606, "611593913"=>501285606, "397123729"=>384311080, "454643891"=>347840724, "663532889"=>412829994, "371674047"=>371674050, "688141190"=>385711984, "822251895"=>707100399, "952284499"=>462667655, "403692190"=>396082456, "416571494"=>416571497, "284145181"=>284145184, "460049357"=>297575434, "885142714"=>396082456, "903697721"=>689774412, "897511324"=>393931941, "512607963"=>293879782, "284625154"=>284625157, "486059426"=>316500319, "284908756"=>284908759, "314841443"=>294952514, "413928923"=>308502519, "306861907"=>303585709, "406279838"=>403761908, "509594468"=>509594811, "710433569"=>401533969, "547046983"=>495581007, "482498256"=>289670447, "574392006"=>414194262, "539587329"=>539587332, "447112326"=>447112329, "405215559"=>402443110, "547934690"=>327826899, "375584450"=>354566841, "968227562"=>316500319, "572724645"=>561175444, "920122607"=>336185043, "815134709"=>503757274, "844467240"=>738827886, "1020688532"=>555261322, "364193735"=>298417671, "480688850"=>480688853} }

      before do
        allow(PrioriData::Repositories::App).to receive(:find).and_return(OpenStruct.new(publisher_id: 51))
      end

      subject do
        VCR.use_cassette("apple_apps_success") do
          instance.import
        end
      end

      it 'returns list of publisher_ids correlated with their app_ids counterparts' do
        expect(subject).to eq publisher_ids
      end

      it 'makes no request to the API' do
        expect(HTTParty).not_to receive(:get)
      end
    end

    context 'when app does not exist' do
      before do
        allow(PrioriData::Repositories::App).to receive(:find).and_return(nil)
      end

      context 'when service is available' do
        context 'response is success' do
          context 'and resultCount greater than 0' do
            subject do
              VCR.use_cassette("apple_apps_success") do
                instance.import
              end
            end

            after do
              subject
            end

            it 'makes request to the API' do
              expect(HTTParty).to receive(:get).with("https://itunes.apple.com/lookup", {:query=>{:id=>app_ids.join(',')}}).and_call_original
            end

            it 'maps apps' do
              expect(instance).to receive(:map_app).exactly(200)
            end
          end

          context 'and resultCount is 0' do
            let(:app_ids) { [3271939450] }

            subject do
              VCR.use_cassette("apple_apps_no_app") do
                instance.import
              end
            end

            after do
              subject
            end

            it 'makes request to the API' do
              expect(HTTParty).to receive(:get).with("https://itunes.apple.com/lookup", {:query=>{:id=>app_ids.join(',')}}).and_call_original
            end

            it 'does not map app' do
              expect(instance).not_to receive(:map_app)
            end
          end
        end

        context 'and response is failure' do
          subject do
            VCR.use_cassette("apple_apps_failure") do
              instance.import
            end
          end

          it 'raises AppleServiceChangedException' do
            expect{subject}.to raise_error(PrioriData::AppleServiceChangedException)
          end
        end
      end
    end

    context 'when service is not available' do
      subject { instance.import }

      before do
        allow(PrioriData::Repositories::App).to receive(:find).and_return(nil)
        allow(HTTParty).to receive(:get).and_raise(Errno::EHOSTUNREACH)
      end

      it 'raises AppleServiceNotAvailableException' do
        expect{subject}.to raise_error(PrioriData::AppleServiceNotAvailableException)
      end
    end
  end

  describe '#map_app' do
    let(:json) do
      {
        "trackId" => 15,
        "trackName" => "trackName",
        "description" => "description",
        "artistId" => 13,
        "artistName" => 'artistName'
      }
    end

    subject { instance.map_app(json) }

    after do
      subject
    end

    it 'creates the app publisher' do
      expect(PrioriData::Repositories::Publisher).to receive(:persist).with(json)
    end

    it 'creates the app' do
      expect(PrioriData::Repositories::App).to receive(:persist).with(json)
    end
  end
end
